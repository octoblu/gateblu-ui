#!/bin/sh

if [ "$KEY_PASSWORD" == "" ]; then
  echo "KEY_PASSWORD is blank"
  exit 1
fi

echo '### downloading Gateblu Service'

if [ ! -f $PLATFORM_BUILD_DIR/GatebluService.pkg ]; then
  pushd $PLATFORM_BUILD_DIR
  curl -sO https://s3-us-west-2.amazonaws.com/gateblu/gateblu-service/latest/GatebluService.pkg
  popd
fi

PLATFORM_APP_DIR=$PLATFORM_BUILD_DIR/Gateblu.app
cp -rfp $APP_ARCHIVE $PLATFORM_APP_DIR/Contents/Resources

echo "### create keychain"
security create-keychain -p travis mac-build.keychain
security import $PLATFORM_SCRIPT_DIR/certs/apple.cer -k ~/Library/Keychains/mac-build.keychain -T /usr/bin/codesign
security import $PLATFORM_SCRIPT_DIR/certs/dist.p12 -k ~/Library/Keychains/mac-build.keychain -P $KEY_PASSWORD -T /usr/bin/codesign
security import $PLATFORM_SCRIPT_DIR/certs/installer.p12 -k ~/Library/Keychains/mac-build.keychain -P $KEY_PASSWORD -T /usr/bin/codesign

identity="A5D9EE988CEFE25C6D04679D00F9C8C60B63C240"
identity_name="Developer ID Installer: Octoblu Inc. (JLSZ8Q5945)"

echo "### signing frameworks"

codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_APP_DIR/Contents/Frameworks/Electron Framework.framework/Versions/Current/Electron Framework"

for file in $PLATFORM_APP_DIR/Contents/Frameworks/*/; do
  echo "Signing $file..."
  codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$file"
done

echo "### signing app"
codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_APP_DIR"

echo "### building packages"
pushd $PLATFORM_BUILD_DIR

mkdir -p GatebluApp
mv Gateblu.app GatebluApp

pkgbuild --analyze --root ./GatebluApp \
  $PLATFORM_BUILD_DIR/GatebluAppComponents.plist

pkgbuild --root ./GatebluApp \
  --identifier com.octoblu.GatebluApp \
  --version 1.0 \
  --ownership recommended \
  --component-plist $PLATFORM_BUILD_DIR/GatebluAppComponents.plist \
  --install-location "/Applications" \
  ./GatebluApp.pkg

codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_BUILD_DIR/GatebluApp.pkg"

pkgutil --expand GatebluService.pkg GatebluService
pkgutil --flatten GatebluService/GatebluServiceCore.pkg GatebluServiceCore.pkg
pkgutil --flatten GatebluService/node.pkg node.pkg
pkgutil --flatten GatebluService/npm.pkg npm.pkg

codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_BUILD_DIR/GatebluServiceCore.pkg"
codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_BUILD_DIR/node.pkg"
codesign --force --verify --verbose --keychain ~/Library/Keychains/mac-build.keychain --sign "$identity" "$PLATFORM_BUILD_DIR/npm.pkg"

mkdir -p $PLATFORM_BUILD_DIR/dmg

productbuild --distribution $PLATFORM_SCRIPT_DIR/installer/distribution.plist \
  --resources $PLATFORM_BUILD_DIR \
  --package-path $PLATFORM_BUILD_DIR \
  --keychain ~/Library/Keychains/mac-build.keychain \
  --sign "$identity_name" \
  "$PLATFORM_BUILD_DIR/dmg/Gateblu Installer.pkg"

popd

echo "### verifying signature"
codesign -vvv -d "$PLATFORM_APP_DIR"
codesign -vvv -d "$PLATFORM_BUILD_DIR/dmg/Gateblu Installer.pkg"

echo "### remove keychain"
security delete-keychain mac-build.keychain

umount /Volumes/Gateblu

echo "### building dmg..."

pushd $PLATFORM_BUILD_DIR
$PLATFORM_SCRIPT_DIR/create-dmg --volname Gateblu \
  --volicon $PLATFORM_SCRIPT_DIR/dmg/volume.icns \
  --background $PLATFORM_SCRIPT_DIR/dmg/background.png \
  --window-size 512 320 \
  --icon-size 128 \
  --icon Gateblu\ Installer.pkg 256 200 \
  --hide-extension Gateblu\ Installer.pkg \
  $PLATFORM_BUILD_DIR/Gateblu.dmg \
  $PLATFORM_BUILD_DIR/dmg
exit $!
